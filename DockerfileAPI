###########################################################################################
# Runner: node
###########################################################################################

FROM node:16 as runner
#FROM gcr.io/distroless/nodejs:16 as runner

# Node
ARG NODE_ENV
ARG RUNTIME_ENV
ENV NODE_ENV=$NODE_ENV
ENV RUNTIME_ENV=$RUNTIME_ENV
ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL

# Set workdir
WORKDIR /app

COPY api/package.json api/package.json
COPY package.json .
COPY .npmrc .
COPY .nvmrc .
#COPY yarn.lock .


# Install dependencies
#RUN yarn add source-map-resolve --ignore-workspace-root-check
RUN yarn add core-js@3.25.0 --ignore-workspace-root-check
RUN yarn install
RUN yarn add react react-dom --ignore-workspace-root-check

#RUN npm install --save core-js@^3
#RUN npm install
#RUN npm install react react-dom

FROM runner as build

WORKDIR /app

COPY api api
COPY graphql.config.js .
COPY redwood.toml .

# Build
RUN yarn rw build api

# Migrate database
# This has been commented out in this example post
# RUN yarn rw prisma migrate deploy

# Seed database
# This has been commented out in this example post
# RUN yarn rw prisma db seed

# Clean up
RUN rm -rf ./api/src

# Set api as workdirectory
WORKDIR /app/api

# Expose RedwoodJS api port
EXPOSE 8911

# Entrypoint to @redwoodjs/api-server binary
ENTRYPOINT [ "yarn", "rw", "serve", "api", "--port", "8911", "--rootPath", "/api" ]
